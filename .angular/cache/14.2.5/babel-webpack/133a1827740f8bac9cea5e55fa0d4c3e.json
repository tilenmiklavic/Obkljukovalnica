{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./repository.service\";\nimport * as i2 from \"./formatting.service\";\nexport let PregledService = /*#__PURE__*/(() => {\n  class PregledService {\n    constructor(repositoryService, formattingService) {\n      this.repositoryService = repositoryService;\n      this.formattingService = formattingService;\n    }\n\n    getUdelezenci(skupina) {\n      return this.repositoryService.getData(skupina);\n    }\n\n    vrniVode() {\n      return this.repositoryService.getVodi();\n    }\n\n    prisotnostPoLjudeh(skupina) {\n      return new Promise((resolve, reject) => {\n        this.repositoryService.getData(skupina).then(data => {\n          let osebe = new Array(data.length).fill(0);\n          let datumi = this.vrniDatume();\n          data.forEach((element, index) => {\n            datumi.forEach(datum => {\n              if (element.prisotnost[datum] == 'x') {\n                osebe[index]++;\n              }\n            });\n          });\n          resolve(osebe);\n        });\n      });\n    }\n\n    pregledPrisotnih(skupina, header) {\n      return new Promise(resolve => {\n        let prisotni = new Array(header.length).fill(0);\n        this.repositoryService.getData(skupina).then(data => {\n          header.forEach((termin, index) => {\n            data.forEach(oseba => {\n              oseba.udelezbe.forEach(udelezba => {\n                if (udelezba.datum == termin && udelezba.prisotnost == 'x') {\n                  prisotni[index]++;\n                }\n              });\n            });\n          });\n          resolve(prisotni);\n        });\n      });\n    }\n\n    vrniDatume() {\n      let header = this.repositoryService.getHeader();\n      let datumi = [];\n      header.forEach(element => {\n        if (this.formattingService.jeDatum(element)) {\n          datumi.push(element);\n        }\n      });\n      return datumi;\n    }\n\n    steviloIzvedenihSrecanj(skupina) {\n      let srecanja = 0;\n      return new Promise((resolve, reject) => {\n        this.repositoryService.getData(skupina).then(data => {\n          let datumi = this.vrniDatume();\n          datumi.forEach(datum => {\n            data.some(element => {\n              if (element.prisotnost[datum] && element.prisotnost[datum].length > 0) {\n                srecanja++;\n              }\n\n              return element.prisotnost[datum] && element.prisotnost[datum].length > 0;\n            });\n          });\n          resolve(srecanja);\n        });\n      });\n    }\n\n  }\n\n  PregledService.ɵfac = function PregledService_Factory(t) {\n    return new (t || PregledService)(i0.ɵɵinject(i1.RepositoryService), i0.ɵɵinject(i2.FormattingService));\n  };\n\n  PregledService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PregledService,\n    factory: PregledService.ɵfac,\n    providedIn: 'root'\n  });\n  return PregledService;\n})();","map":null,"metadata":{},"sourceType":"module"}