{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/formatting.service\";\nimport * as i2 from \"src/app/services/pregled.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"angular2-chartjs\";\n\nfunction PregledComponent_mat_progress_spinner_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.color)(\"mode\", ctx_r0.mode);\n  }\n}\n\nfunction PregledComponent_th_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 6);\n    i0.ɵɵlistener(\"click\", function PregledComponent_th_20_Template_th_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.sortTable(1));\n    });\n    i0.ɵɵtext(1, \"Vod\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PregledComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 6);\n    i0.ɵɵlistener(\"click\", function PregledComponent_th_21_Template_th_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.sortTable(1));\n    });\n    i0.ɵɵtext(1, \"Gru\\u010Da\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PregledComponent_tr_27_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r8.vod);\n  }\n}\n\nfunction PregledComponent_tr_27_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r8.gruca);\n  }\n}\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"table-success\": a0,\n    \"table-warning\": a1,\n    \"table-danger\": a2\n  };\n};\n\nfunction PregledComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 11)(1, \"td\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, PregledComponent_tr_27_td_3_Template, 2, 1, \"td\", 13);\n    i0.ɵɵtemplate(4, PregledComponent_tr_27_td_4_Template, 2, 1, \"td\", 13);\n    i0.ɵɵelementStart(5, \"td\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 15);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(9, _c0, element_r8.graphValue / ctx_r3.steviloIzvedenihSrecanj * 100 >= ctx_r3.settings.low_presence, element_r8.graphValue / ctx_r3.steviloIzvedenihSrecanj * 100 >= ctx_r3.settings.minimal_presence && element_r8.graphValue / ctx_r3.steviloIzvedenihSrecanj * 100 < ctx_r3.settings.low_presence, element_r8.graphValue / ctx_r3.steviloIzvedenihSrecanj * 100 >= 0 && element_r8.graphValue / ctx_r3.steviloIzvedenihSrecanj * 100 < ctx_r3.settings.minimal_presence));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", element_r8.ime, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r8.vod);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r8.gruca);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(element_r8.graphValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(9, 6, element_r8.graphValue / ctx_r3.steviloIzvedenihSrecanj * 100, \"1.0-0\"), \"%\");\n  }\n}\n\nexport let PregledComponent = /*#__PURE__*/(() => {\n  class PregledComponent {\n    constructor(formattingService, pregledService) {\n      this.formattingService = formattingService;\n      this.pregledService = pregledService;\n      this.datum = '12.6.';\n      this.loaded = false;\n      this.data = [];\n      this.vodi = [];\n      this.prisotnostPoVodih = [];\n      this.prisotnostPoLjudeh = [];\n      this.steviloIzvedenihSrecanj = 1;\n      this.settings = JSON.parse(localStorage.getItem('settings')) || this.formattingService.newSettings();\n      this.color = 'primary';\n      this.mode = 'indeterminate';\n      this.dayGraph = {\n        type: '',\n        podatki: {},\n        options: {},\n        labels: []\n      };\n    }\n\n    setupDayGraph() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.dayGraph.labels = this.pregledService.vrniDatume();\n        this.pregledService.pregledPrisotnih(this.settings.skupina, this.dayGraph.labels).then(dayGraphPodatki => {\n          this.dayGraph.podatki = dayGraphPodatki;\n          this.dayGraph.type = 'bar';\n          this.dayGraph.podatki = {\n            labels: this.dayGraph.labels,\n            datasets: [{\n              label: \"Pregled po osebah\",\n              data: this.dayGraph.podatki\n            }]\n          };\n          this.dayGraph.options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            aspectRatio: 1.2\n          };\n        });\n      });\n    }\n\n    sortTable(n) {\n      var table,\n          rows,\n          switching,\n          i,\n          x,\n          y,\n          shouldSwitch,\n          dir,\n          switchcount = 0;\n      table = document.getElementById(\"peopleTable\");\n      switching = true; //Set the sorting direction to ascending:\n\n      dir = \"asc\";\n      /*Make a loop that will continue until\n      no switching has been done:*/\n\n      while (switching) {\n        //start by saying: no switching is done:\n        switching = false;\n        rows = table.rows;\n        /*Loop through all table rows (except the\n        first, which contains table headers):*/\n\n        for (i = 1; i < rows.length - 1; i++) {\n          //start by saying there should be no switching:\n          shouldSwitch = false;\n          /*Get the two elements you want to compare,\n          one from current row and one from the next:*/\n\n          x = rows[i].getElementsByTagName(\"TD\")[n];\n          y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n          /*check if the two rows should switch place,\n          based on the direction, asc or desc:*/\n\n          if (dir == \"asc\") {\n            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n              //if so, mark as a switch and break the loop:\n              shouldSwitch = true;\n              break;\n            }\n          } else if (dir == \"desc\") {\n            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n              //if so, mark as a switch and break the loop:\n              shouldSwitch = true;\n              break;\n            }\n          }\n        }\n\n        if (shouldSwitch) {\n          /*If a switch has been marked, make the switch\n          and mark that a switch has been done:*/\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true; //Each time a switch is done, increase this count by 1:\n\n          switchcount++;\n        } else {\n          /*If no switching has been done AND the direction is \"asc\",\n          set the direction to \"desc\" and run the while loop again.*/\n          if (switchcount == 0 && dir == \"asc\") {\n            dir = \"desc\";\n            switching = true;\n          }\n        }\n      }\n    }\n\n    ngOnInit() {\n      // set date for correct querying\n      this.datum = this.formattingService.getDate();\n      this.pregledService.getUdelezenci(this.settings.skupina).then(udelezenci => {\n        this.data = udelezenci;\n        this.loaded = true;\n      }).finally(() => {\n        this.setupDayGraph();\n        this.vodi = this.pregledService.vrniVode();\n        this.pregledService.prisotnostPoLjudeh(this.settings.skupina).then(prisotnostPoLjudeh => {\n          this.prisotnostPoLjudeh = prisotnostPoLjudeh;\n          this.data.forEach((udelezenec, index) => {\n            udelezenec.graphValue = prisotnostPoLjudeh[index];\n          });\n        });\n        this.pregledService.steviloIzvedenihSrecanj(this.settings.skupina).then(steviloIzvedenihSrecanj => {\n          this.steviloIzvedenihSrecanj = steviloIzvedenihSrecanj;\n        });\n      });\n    }\n\n  }\n\n  PregledComponent.ɵfac = function PregledComponent_Factory(t) {\n    return new (t || PregledComponent)(i0.ɵɵdirectiveInject(i1.FormattingService), i0.ɵɵdirectiveInject(i2.PregledService));\n  };\n\n  PregledComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PregledComponent,\n    selectors: [[\"app-pregled\"]],\n    decls: 29,\n    vars: 7,\n    consts: [[1, \"naslov\"], [1, \"spinner\", \"d-flex\", \"justify-content-center\"], [\"class\", \"example-margin\", 3, \"color\", \"mode\", 4, \"ngIf\"], [1, \"container\"], [3, \"type\", \"data\", \"options\"], [\"id\", \"peopleTable\", 1, \"table\", \"sortable\"], [3, \"click\"], [3, \"click\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"document_end\"], [1, \"example-margin\", 3, \"color\", \"mode\"], [3, \"ngClass\"], [1, \"imePrisotnega\", \"col-6\"], [4, \"ngIf\"], [1, \"steviloPrisotnosti\", \"col-4\", \"text-center\"], [1, \"col-2\"]],\n    template: function PregledComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 0);\n        i0.ɵɵtext(2, \"Pregled\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, PregledComponent_mat_progress_spinner_4_Template, 1, 2, \"mat-progress-spinner\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"h2\");\n        i0.ɵɵtext(7, \" Pregled po dnevih \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelement(9, \"chart\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"hr\");\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"h2\");\n        i0.ɵɵtext(13, \" Pregled po osebah \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"table\", 5)(16, \"thead\")(17, \"tr\")(18, \"th\", 6);\n        i0.ɵɵlistener(\"click\", function PregledComponent_Template_th_click_18_listener() {\n          return ctx.sortTable(0);\n        });\n        i0.ɵɵtext(19, \"Ime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, PregledComponent_th_20_Template, 2, 0, \"th\", 7);\n        i0.ɵɵtemplate(21, PregledComponent_th_21_Template, 2, 0, \"th\", 7);\n        i0.ɵɵelementStart(22, \"th\", 6);\n        i0.ɵɵlistener(\"click\", function PregledComponent_Template_th_click_22_listener() {\n          return ctx.sortTable(2);\n        });\n        i0.ɵɵtext(23, \"Prisotnosti\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\", 6);\n        i0.ɵɵlistener(\"click\", function PregledComponent_Template_th_click_24_listener() {\n          return ctx.sortTable(3);\n        });\n        i0.ɵɵtext(25, \"Procent\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"tbody\");\n        i0.ɵɵtemplate(27, PregledComponent_tr_27_Template, 10, 13, \"tr\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(28, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loaded);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.dayGraph.type)(\"data\", ctx.dayGraph.podatki)(\"options\", ctx.dayGraph.options);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.data[0].vod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data[0].gruca);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.MatProgressSpinner, i5.ChartComponent, i3.DecimalPipe],\n    styles: [\".naslov[_ngcontent-%COMP%]{font-size:xx-large;font-weight:700;padding:2rem 0rem 2rem 2rem}.skupina[_ngcontent-%COMP%]{padding-bottom:1rem}.line[_ngcontent-%COMP%]{margin:1rem}.summary[_ngcontent-%COMP%]{margin-bottom:5rem;margin:2rem 0rem 0rem 1rem}.chart-container[_ngcontent-%COMP%]{width:2000px;overflow-x:scroll;white-space:nowrap;position:relative}.peopleChart[_ngcontent-%COMP%]{display:inline-block}\"]\n  });\n  return PregledComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}